#include "js/js_{name}_template.h"
#include "js/js_{name}.h"
{#templateNames}
#include "js/js_{.}_template.h"{/templates}

{autoProperties}

v8::Handle<v8::Value> js_{name}_get_template(const v8::Arguments &args);
v8::Handle<v8::FunctionTemplate> js_{name}_get_template() {
	v8::Handle<v8::FunctionTemplate> templ = v8::FunctionTemplate::New();
	v8::Handle<v8::ObjectTemplate> {name} = templ->InstanceTemplate();
	{name}->SetInternalFieldCount(2);
	templ->SetCallHandle(def_{name}_constructor);	
	{name}.MakeWeak(NULL, def_{name}_finalize);
	{methods}
	{properties}
	{templates}
	return {name};
}
