{#autoProperties obj_name=name}
v8::Handle<v8::Value> js_{obj_name}_get_{.name}(v8::Local<v8::String> property, const v8::AccessorInfo &info) {
	v8::Local<v8::Object> thiz = info.Holder();
	{obj_name} *obj = ({obj_name}*) v8::Local<v8::External>::Cast(thiz->GetInternalField(0))->Value();
	{#customGetter}
	{.}
	{:else}
	{.type} prop = obj->{.cName};
	return v8::{.jsType}::New(prop);
	{/customGetter}
}

void js_{obj_name}_set_{name}(v8::Local<v8::String> property, v8::Local<v8::Value> value, const v8::AccessorInfo &info) {
	v8::Local<v8::Object> thiz = info.Holder();
	{obj_name} *obj = ({obj_name}*) v8::Local<v8::External>::Cast(thiz->GetInternalField(0))->Value();
	{#customSetter}
	{.}
	{:else}
	obj->{cName} = value->To{.jsType}()->Value();
	{/customSetter}
}
{/autoProperties}
