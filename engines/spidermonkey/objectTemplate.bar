#include "js_{name}_template.gen.h"
#include "js/js_{name}.h"

{#headers}
#include "{.}"
{/headers}
{#templateNames}

#include "js_{.}_template.gen.h"{/templateNames}
#include "js/js_core.h"

{autoProperties}

{methodArray}

{propertyArray}

static JSClass {name}_class = {
	"{jsName}",
	JSCLASS_HAS_PRIVATE,
	JS_PropertyStub, JS_PropertyStub, JS_PropertyStub, JS_StrictPropertyStub,
	JS_EnumerateStub, JS_ResolveStub, JS_ConvertStub,
	def_{name}_class_finalize
};

CEXPORT void {name}_add_to_object(JSObject *parent) {
	JSContext *cx = get_js_context();
	JS_InitClass(cx, parent, NULL, &{name}_class, def_{name}_class_constructor,
	{constructorArgc}, properties, functions, NULL, NULL);
}
